<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xinpengdu.persistence.RoleMapper">

	<resultMap id="RoleMap" type="Role">
		<result column="roleId" property="roleId" jdbcType="INTEGER" />
		<result column="roleName" property="roleName" jdbcType="VARCHAR" />
		<result column="requiredUserType" property="requiredUserType" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="editable" property="editable" jdbcType="INTEGER" />
	</resultMap>
	
    <sql id="baseColumn">
		roleId,roleName,requiredUserType,description,editable
	</sql>

	<select id="queryList" resultType="map" parameterType="map" >
		select
		<include refid="baseColumn" />
		from t_role i
		<where>
			and 0=0
			<if test="projectId != null and projectId != ''">
				and projectId = #{projectId}
			</if>
			<if test="roleName != null and roleName != ''">
				and i.roleName like '%${roleName}%'
			</if>
		</where>
		order by i.roleId asc
	</select>

	<select id="count" resultType="int" parameterType="map">
		select  count(*)
		from t_role i
		<where>
			and 0=0
			<if test="projectId != null and projectId != ''">
				and projectId = #{projectId}
			</if>
		</where>
	</select>

	<select id="getEditInfo" resultMap="RoleMap" parameterType="map">
		select
		<include refid="baseColumn" />
		from t_role where roleId = #{roleId}
	</select>
	
    <select id="query" resultMap="RoleMap" parameterType="java.lang.String">
        select
        <include refid="baseColumn" />
        from t_role where roleId = #{value}
    </select>

	<select id="get" resultMap="RoleMap" parameterType="java.lang.String">
		select
		<include refid="baseColumn" />
		from t_role where roleId = #{value}
	</select>
	
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from t_role where
		roleId = #{value}
	</delete>

	<insert id="save" parameterType="Role">
		insert into t_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null" >
				roleId,
			</if>
			<if test="roleName != null" >
				roleName,
			</if>
			<if test="requiredUserType != null" >
				requiredUserType,
			</if>
			<if test="description != null" >
				description,
			</if>
			<if test="editable != null" >
				editable,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null" >
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null" >
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="requiredUserType != null" >
				#{requiredUserType,jdbcType=VARCHAR},
			</if>
			<if test="description != null" >
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="editable != null" >
				#{editable,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="Role">
		update t_role
		<set>
			<if test="roleId != null" >
				roleId = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null" >
				roleName = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="requiredUserType != null" >
				requiredUserType = #{requiredUserType,jdbcType=VARCHAR},
			</if>
			<if test="description != null" >
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="editable != null" >
				editable = #{editable,jdbcType=INTEGER},
			</if>
		</set>
		where roleId = #{roleId,jdbcType=INTEGER}
	</update>

</mapper>
